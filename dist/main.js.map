{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/RandomGif/actions/types.js","webpack:///./src/RandomGif/reducers/index.js","webpack:///./src/RandomGif/actions/index.js","webpack:///./src/RandomGif/sagas/index.js","webpack:///./src/RandomGif/styles/index.js","webpack:///./src/RandomGif/index.js","webpack:///./src/RandomGifPair/actions/types.js","webpack:///./src/RandomGifPair/actions/index.js","webpack:///./src/RandomGifPair/reducers/index.js","webpack:///./src/RandomGifPair/sagas/index.js","webpack:///./src/RandomGifPair/styles/index.js","webpack:///./src/RandomGifPair/index.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","REQUEST_NEW_GIF","RECEIVE_NEW_GIF","REQUEST_NEW_GIF_ERROR","NEW_GIF","LOADING_START","LOADING_COMPLETE","reducer","state","action","type","actionTypes","_objectSpread","isLoading","error","imageUrl","payload","requestNewGif","receiveNewGif","imgUrl","loadingComplete","isSuccess","fetchGif","apiKey","fetch","then","response","json","catch","Error","mainSaga","regeneratorRuntime","mark","effects","wrap","_context","prev","next","put","take","sent","fixed_width_small_url","actions","t0","stop","this","styles","table","display","flex-wrap","margin","padding","flex-direction","width","cell","box-sizing","flex-grow","overflow","border","color","fade","border-bottom","background-color","align-items","justify-content","&:last-child","image-container","height","image","RandomGif","props","_this","_React$Component","componentManager","ComponentManager","_assertThisInitialized","namespace","saga","partialRight","allowedIncomingMulticastActionTypes","namespaceInitCallback","styleSheet","jss","setup","jssDefaultPreset","createStyleSheet","generateClassName","createClassNameGenerator","attach","namespaceDestroyCallback","_ref","detach","render","_this2","classes","getNamespaceData","react_default","a","createElement","className","alt","src","showButton","onClick","dispatch","disabled","React","Component","contextType","AppContainerContext","propTypes","PropTypes","bool","string","appContainer","instanceOf","AppContainer","defaultProps","exposedActionTypes","exposedActions","REQUEST_NEW_PAIR","requestNewPair","_objectSpread2","RandomGifActionTypes","reducers_objectSpread","itemsLoading","componentId","_objectSpread3","_action$payload","payloadError","keys","forEach","isLoadingStartActionDispatched","_context4","takeEvery","_callee","_callee2","_context2","select","_readOnlyError","_callee3","_context3","RandomGifActions","_marked","RandomGifPair","RandomGifPair_assertThisInitialized","src_RandomGif","namespacePrefix","fullPath","fractal_component_esm","pattern","relativeDispatchPath","ReactDOM","src_RandomGifPair","document","getElementById"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,SAEAU,+iBCtJa0C,EAAkBlB,OAAO,mBACzBmB,EAAkBnB,OAAO,mBACzBoB,EAAwBpB,OAAO,yBAE/BqB,EAAUrB,OAAO,WACjBsB,EAAgBtB,OAAO,iBACvBuB,EAAmBvB,OAAO,gdCJvC,IA0BewB,EA1BC,SAASC,EAAOC,GAC5B,OAAQA,EAAOC,MACX,KAAKC,EACD,OAAAC,EAAA,GACOJ,EADP,CAEIK,WAAW,EACXC,MAAO,OAEf,KAAKH,EAED,OAAAC,EAAA,GACOJ,EADP,CAEIK,WAAW,EACXC,MAAO,KACPC,SALaN,EAAOO,UAQ5B,KAAKL,EACD,OAAAC,EAAA,GACOJ,EADP,CAEIK,WAAW,EACXC,MAAOL,EAAOO,UAEtB,QAAS,OAAOR,ICvBjB,SAASS,IACZ,MAAO,CACHP,KAAMC,GAIP,SAASO,EAAcC,GAC1B,MAAO,CACHT,KAAMC,EACNK,QAASG,GAyBV,SAASC,EAAgBN,GAC5B,YAD0C,IAAdA,MAAQ,MAC7B,CACHJ,KAAMC,EACNK,QAAS,CACLK,WAAWP,EACXA,UCtCZ,SAASQ,EAASC,GACd,OAAOC,MAAK,gDACwCD,GAClDE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAAQC,MAAM,SAAAd,GACtC,MAAM,IAAIe,MAAM,oEAIxB,IA8CeC,EA9CDC,mBAAAC,KAAG,SAAXF,EAAqBG,EAASV,GAAnB,IAAAG,EAAAP,EAAA,OAAAY,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAC,KAAA,SAOL,OAPKD,EAAAE,KAAA,EAOCJ,EAAQK,IDaf,CACH5B,KAAMC,GCdwC,cAPrC,OAWU,OAXVwB,EAAAE,KAAA,EAWgBJ,EAAQM,KAAK5B,GAX7B,OAYY,OAZZwB,EAAAK,KAAAL,EAAAE,KAAA,EAYkBJ,EAAQhF,KAAKqE,EAAUC,GAZzC,OAcL,OAFMG,EAZDS,EAAAK,KAaCrB,EAASO,EAASvF,KAAKsG,sBAbxBN,EAAAE,KAAA,GAcCJ,EAAQK,IAAII,EAAsBvB,IAdnC,QA8BL,OA9BKgB,EAAAE,KAAA,GA8BCJ,EAAQK,IDhBf,CACH5B,KAAMC,GCekC,cA9B/B,QAmCL,OAnCKwB,EAAAE,KAAA,GAmCCJ,EAAQK,IAAII,IAA2B,cAnCxC,QAAAP,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAsCT,OAtCSF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAE,KAAA,GAsCHJ,EAAQK,KDlCaxB,ECkCTqB,EAAAQ,GDjCf,CACHjC,KAAMC,EACNK,QAASF,KCPA,QA2CT,OA3CSqB,EAAAE,KAAA,GA2CHJ,EAAQK,IAAII,EAAAP,EAAAQ,IAA4B,cA3CrC,yBAAAR,EAAAS,ODIV,IAA4B9B,GCJ7BgB,EAAWe,KAAA,+DC0BFC,EApCA,CACXC,MAAO,CACHC,QAAS,OACTC,YAAa,OACbC,OAAQ,0BACRC,QAAS,EACTC,iBAAkB,SAClBC,MAAO,QAEXC,KAAM,CACFC,aAAc,aACdC,YAAa,EACbH,MAAO,OACPI,SAAU,SACVN,QAAS,cACTO,OAAM,aAAeC,IAAM,aAAaC,KAAK,IAC7CC,gBAAiB,OACjBC,mBAAoB,UACpBd,QAAS,OACTe,cAAe,SACfC,kBAAmB,SACnBC,eAAgB,CACZJ,gBAAA,aAA8BF,IAAM,aAAaC,KAC7C,IADJ,gBAKRM,kBAAmB,CACfC,OAAQ,QAEZC,MAAO,CACHf,MAAO,OACPc,OAAQ,+BCrBVE,sBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACfA,EAAAC,EAAAvH,KAAA4F,KAAMyB,IAANzB,MAEKrC,MAAQ,CACTK,WAAW,EACXE,SAAU,KACVD,MAAO,MAEXyD,EAAKE,iBAAmB,IAAIC,6HAAJC,CAAAJ,GAA2B,CAC/CK,UAAW,6BAEXjE,cACAJ,UACAsE,KAAMC,IAAaD,EAAMP,EAAM/C,QAC/BwD,oCAAqC,CAACpE,GACtCqE,sBAAuB,SAAAP,GAOnB,MAAO,CAAEQ,WANUC,IACdC,MAAMC,OACNC,iBAAiBvC,EAAQ,CACtBwC,kBAAmBb,EAAiBc,6BAEvCC,WAGTC,yBAA0B,SAAAC,GAAoBA,EAAjBT,WACdU,YAzBJpB,4GA8BnBqB,OAAA,WAAS,IAAAC,EAAAhD,KAEGiD,EADejD,KAAK4B,iBAAiBsB,mBAArCd,WACAa,QACR,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ/C,OACpBiD,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQxC,MAAxB,aACA0C,EAAAC,EAAAC,cAAA,OACIC,UAAcL,EAAQxC,KAAb,IAAqBwC,EAAQ,oBAErCjD,KAAKrC,MAAMO,WACP8B,KAAKrC,MAAMK,YACXgC,KAAKrC,MAAMM,OACRkF,EAAAC,EAAAC,cAAA,OACIE,IAAI,MACJC,IAAKxD,KAAKrC,MAAMO,SAChBoF,UAAS,GAAKL,EAAQ1B,UAG/BvB,KAAKrC,MAAMO,UAAY8B,KAAKrC,MAAMK,aAChCgC,KAAKrC,MAAMM,OACRkF,EAAAC,EAAAC,cAAA,SACKrD,KAAKrC,MAAMK,UACN,oBACA,sBAGjBgC,KAAKrC,MAAMM,OACRkF,EAAAC,EAAAC,cAAA,mCAA8BrD,KAAKrC,MAAMM,QAGhD+B,KAAKyB,MAAMgC,YACRN,EAAAC,EAAAC,cAAA,OAAKC,UAAcL,EAAQxC,KAAb,KACV0C,EAAAC,EAAAC,cAAA,UACIK,QAAS,WACLV,EAAKpB,iBAAiB+B,SAClB9D,MAGR+D,SAAU5D,KAAKrC,MAAMK,WAEpBgC,KAAKrC,MAAMK,UACN,oBACA,iBAzEV6F,IAAMC,WAmF9BtC,EAAUuC,YAAcC,IAExBxC,EAAUyC,UAAY,CAClBR,WAAYS,IAAUC,KACtBzF,OAAQwF,IAAUE,OAClBnE,OAAQiE,IAAUrH,OAClBwH,aAAcH,IAAUI,WAAWC,MAGvC/C,EAAUgD,aAAe,CACrBf,YAAY,EACZ/E,OAAQ,oCAGG8C,QAGTiD,EAAqB,CACvBlH,QAASO,EACTN,cAAeM,EACfL,iBAAkBK,EAClBV,gBAAiBU,GAGf4G,EAAiB,CACnBtG,cAAeyB,GCxHN8E,EAAmBzI,OAAO,oBAC1BsB,EAAgBtB,OAAO,iBACvBuB,EAAmBvB,OAAO,oBCAhC,SAAS0I,IACZ,MAAO,CACH/G,KAAMC,GAUP,SAASS,EAAgBN,GAC5B,YAD0C,IAAdA,MAAQ,MAC7B,CACHJ,KAAMC,EACNK,QAAS,CACLK,WAAWP,EACXA,scCjBZ,IAiCeP,EAjCC,SAASC,EAAOC,GAAQ,IAAAiH,EACpC,OAAQjH,EAAOC,MACX,KAAKiH,EAAqBtH,cACtB,OAAAuH,EAAA,GACOpH,EADP,CAEIK,WAAW,EACXgH,aAAcD,EAAA,GACPpH,EAAMqH,cADDH,EAAA,GAAAA,EAEPjH,EAAOqH,cAAc,EAFdJ,MAKpB,KAAKC,EAAqBrH,iBAAkB,IAAAyH,EAAAC,EACJvH,EAAOO,QAAnCK,EADgC2G,EAChC3G,UAAW4G,EADqBD,EACrBC,aACbJ,EAAwBrH,EAAxBqH,aAAc/G,EAAUN,EAAVM,MACpB+G,EAAeD,EAAA,GACRC,IADKE,EAAA,IAEPtH,EAAOqH,cAAc,EAFdC,IAIZ,IAAIlH,GAAY,EAIhB,OAHA/D,OAAOoL,KAAKL,GAAcM,QAAQ,SAAAL,GAC1BD,EAAaC,KAAcjH,GAAY,KAE/C+G,EAAA,GACOpH,EADP,CAEIK,YACAC,MAAOA,IAAgBO,EAAY,KAAO4G,GAC1CJ,iBAGR,QACI,OAAOrH,8BCzBTsB,yDAAV,SAAUA,EAASG,GAAnB,IAAAmG,EAAA,OAAArG,mBAAAG,KAAA,SAAAmG,GAAA,cAAAA,EAAAjG,KAAAiG,EAAAhG,MAAA,OAEI,OADM+F,GAAiC,EAD3CC,EAAAhG,KAAA,EAEUJ,EAAQqG,UACVX,EAAqBtH,cADnB0B,mBAAAC,KAEF,SAAAuG,IAAA,OAAAxG,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACS+F,EADT,CAAAjG,EAAAE,KAAA,QAEQ,OAFRF,EAAAE,KAAA,EAEcJ,EAAQK,IFJnB,CACH5B,KAAMC,GEKM,cAJZ,wBAAAwB,EAAAS,SAAA2F,EAAA1F,SAJR,OAaI,OAbJwF,EAAAhG,KAAA,EAaUJ,EAAQqG,UACVX,EAAqBrH,iBADnByB,mBAAAC,KAEF,SAAAwG,IAAA,IAAA9C,EAAA7E,EAAAC,EAAA,OAAAiB,mBAAAG,KAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,OAOiC,OAPjCoG,EAAApG,KAAA,EAOuCJ,EAAQyG,SAP/C,UAAAhD,EAAA+C,EAAAjG,KAOY3B,EAPZ6E,EAOY7E,UAAWC,EAPvB4E,EAOuB5E,MACdD,EART,CAAA4H,EAAApG,KAAA,QASQ,OATRoG,EAAApG,KAAA,EAScJ,EAAQK,IACVI,EAAwB5B,GACxB,cAXZ,OAasC6H,EAAA,kCAA9BP,GAAiC,EAbzC,wBAAAK,EAAA7F,SAAA4F,EAAA3F,SAfR,OAiCI,OAjCJwF,EAAAhG,KAAA,EAiCUJ,EAAQqG,UACV3H,EADEoB,mBAAAC,KAEF,SAAA4G,IAAA,OAAA7G,mBAAAG,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,OACI,OADJwG,EAAAxG,KAAA,EACUJ,EAAQK,IACVwG,EAAiB7H,gBACjB,YAHR,wBAAA4H,EAAAjG,SAAAgG,EAAA/F,SAnCR,wBAAAwF,EAAAzF,SAAAmG,EAAAlG,MA4Cef,QCdAgB,EApCA,CACXC,MAAO,CACHC,QAAS,OACTC,YAAa,OACbC,OAAQ,0BACRC,QAAS,EACTC,iBAAkB,SAClBC,MAAO,QAEXC,KAAM,CACFC,aAAc,aACdC,YAAa,EACbH,MAAO,OACPI,SAAU,SACVN,QAAS,cACTO,OAAM,aAAeC,IAAM,aAAaC,KAAK,IAC7CC,gBAAiB,OACjBC,mBAAoB,UACpBd,QAAS,OACTe,cAAe,SACfC,kBAAmB,SACnBC,eAAgB,CACZJ,gBAAA,aAA8BF,IAAM,aAAaC,KAC7C,IADJ,gBAKRM,kBAAmB,CACfC,OAAQ,QAEZC,MAAO,CACHf,MAAO,OACPc,OAAQ,aCnBV6E,sBACF,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OACfA,EAAAC,EAAAvH,KAAA4F,KAAMyB,IAANzB,MACKrC,MAAQ,CACTqH,aAAc,GACdhH,WAAW,EACXC,MAAO,MAGXyD,EAAKE,iBAAmB,IAAIC,6HAAJuE,CAAA1E,GAA2B,CAC/CK,UAAW,iCACXrE,UACAsE,OAMAlE,cAIAoE,oCAAqC,CAACpE,GACtCqE,sBAAuB,SAAAP,GAOnB,MAAO,CAAEQ,WANUC,IACdC,MAAMC,OACNC,iBAAiBf,EAAMxB,OAASwB,EAAMxB,OAASA,EAAQ,CACpDwC,kBAAmBb,EAAiBc,6BAEvCC,WAGTC,yBAA0B,SAAAC,GAAoBA,EAAjBT,WACdU,YAhCJpB,4GAqCnBqB,OAAA,WAAS,IAAAC,EAAAhD,KAEGiD,EADejD,KAAK4B,iBAAiBsB,mBAArCd,WACAa,QACR,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ/C,OACpBiD,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQxC,MAAxB,kBACA0C,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAKL,EAAQxC,MACvB0C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgD,EAAD,CACI5C,YAAY,EACZ/E,OAAQsB,KAAKyB,MAAM/C,OACnB4H,gBACItG,KAAK4B,iBAAiB2E,SADX,QAGflC,aAAcrE,KAAK4B,iBAAiByC,gBAG5ClB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgD,EAAD,CACI5C,YAAY,EACZ/E,OAAQsB,KAAKyB,MAAM/C,OACnB4H,gBACItG,KAAK4B,iBAAiB2E,SADX,QAGflC,aAAcrE,KAAK4B,iBAAiByC,iBAI/CrE,KAAKyB,MAAMgC,YACRN,EAAAC,EAAAC,cAAA,OAAKC,UAAcL,EAAQxC,KAAb,KACV0C,EAAAC,EAAAC,cAAA,UACIK,QAAS,WACLV,EAAKpB,iBAAiB+B,SAClB9D,MAGR+D,SAAU5D,KAAKrC,MAAMK,WAEpBgC,KAAKrC,MAAMK,UACN,aACA,iBASlBmF,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIF,gBAAoBtG,KAAK4B,iBAAiB2E,SAA3B,QACfE,QAAS3B,EAAqBvH,QAC9BmJ,qBAAqB,gBACrBrC,aAAcrE,KAAK4B,iBAAiByC,eASxClB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIF,gBAAoBtG,KAAK4B,iBAAiB2E,SAA3B,QACfE,QAAS,SAAA7I,GAAM,OACXA,EAAOC,OAASiH,EAAqBtH,eACrCI,EAAOC,OAASiH,EAAqBrH,kBAEzCiJ,qBAAqB,KACrBrC,aAAcrE,KAAK4B,iBAAiByC,oBA3G5BR,IAAMC,WAmHlCqC,EAAcpC,YAAcC,IAE5BmC,EAAclC,UAAY,CACtBR,WAAYS,IAAUC,KACtBzF,OAAQwF,IAAUE,OAClBnE,OAAQiE,IAAUrH,OAClBwH,aAAcH,IAAUI,WAAWC,MAGvC4B,EAAc3B,aAAe,CACzBf,YAAY,GAGD0C,QAMFrB,EAAqBvH,QC7IlCoJ,IAAS5D,OACLI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgD,EAAD,OAEJlD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuD,EAAD,QAGRC,SAASC,eAAe","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([403,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const REQUEST_NEW_GIF = Symbol(\"REQUEST_NEW_GIF\");\nexport const RECEIVE_NEW_GIF = Symbol(\"RECEIVE_NEW_GIF\");\nexport const REQUEST_NEW_GIF_ERROR = Symbol(\"REQUEST_NEW_GIF_ERROR\");\n//--- outgoing actions\nexport const NEW_GIF = Symbol(\"NEW_GIF\");\nexport const LOADING_START = Symbol(\"LOADING_START\");\nexport const LOADING_COMPLETE = Symbol(\"LOADING_COMPLETE\");","import * as actionTypes from \"../actions/types\";\n\nconst reducer = function(state, action) {\n    switch (action.type) {\n        case actionTypes.REQUEST_NEW_GIF:\n            return {\n                ...state,\n                isLoading: true,\n                error: null\n            };\n        case actionTypes.RECEIVE_NEW_GIF: {\n            const imageUrl = action.payload;\n            return {\n                ...state,\n                isLoading: false,\n                error: null,\n                imageUrl\n            };\n        }\n        case actionTypes.REQUEST_NEW_GIF_ERROR:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload\n            };\n        default: return state;\n    }\n};\nexport default reducer;\n","import * as actionTypes from \"./types\";\n\nexport function requestNewGif() {\n    return {\n        type: actionTypes.REQUEST_NEW_GIF\n    };\n}\n\nexport function receiveNewGif(imgUrl) {\n    return {\n        type: actionTypes.RECEIVE_NEW_GIF,\n        payload: imgUrl\n    };\n}\n\nexport function requestNewGifError(error) {\n    return {\n        type: actionTypes.REQUEST_NEW_GIF_ERROR,\n        payload: error\n    };\n}\n\n// --- for outgoing actions\n\nexport function newGif() {\n    return {\n        type: actionTypes.NEW_GIF\n    };\n}\n\nexport function loadingStart() {\n    return {\n        type: actionTypes.LOADING_START\n    };\n}\n\nexport function loadingComplete(error = null) {\n    return {\n        type: actionTypes.LOADING_COMPLETE,\n        payload: {\n            isSuccess: error ? false : true,\n            error\n        }\n    };\n}\n","import * as actionTypes from \"../actions/types\";\nimport * as actions from \"../actions\";\n\nfunction fetchGif(apiKey) {\n    return fetch(\n        `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`\n    ).then(response => response.json()).catch(error=>{\n        throw new Error(\"Giphy API key is invalid or exceeded its daily / hourly limit.\");\n    });\n}\n\nconst mainSaga = function*(effects, apiKey) {\n    try{\n        while(true){\n            /**\n             * Dedicated LOADING_START action to notify interested components outside\n             * This component will not use it in any way\n             */\n            yield effects.put(actions.loadingStart(), \"../../../*\");\n\n            // --- create an effect of taking an `REQUEST_NEW_GIF` action from this Component's action channel\n            // --- Until an action is available for being taken, this saga will not resume its execution.\n            const action = yield effects.take(actionTypes.REQUEST_NEW_GIF);\n            const response = yield effects.call(fetchGif, apiKey);\n            const imgUrl = response.data.fixed_width_small_url;\n            yield effects.put(actions.receiveNewGif(imgUrl));\n\n             /**\n             * The optional second `relativeDispatchPath` parameter defines\n             * the relative (from current component full namespace path) namespace dispatch path.\n             * i.e. suppose the current component full namespace path is:\n             *  namespacePrefix        namespace                  random component ID\n             *    `xxxxxx`   /  `io.github.t83714/RandomGif`  /        `cx`\n             * e.g. `exampleApp/Gifs/io.github.t83714/RandomGif/c0`\n             * If `relativeDispatchPath` is `../../../*`, the effective dispatch path is `exampleApp/Gifs/*`.\n             * Although, theoretically, you could use `relativeDispatchPath` & \"..\" to dispatch the action\n             * into any namespace, you should throw the action just out of the your component \n             * as you are supposed to know nothing about outside world as a component author.\n             */\n            //--- optional second `relativeDispatchPath` parameter\n            //--- specify the action dispatch path\n            yield effects.put(actions.newGif(), \"../../../*\");\n\n            /**\n             * Dedicated LOADING_COMPLETE action to notify interested components outside\n             */\n            yield effects.put(actions.loadingComplete(), \"../../../*\");\n        }\n    }catch(e){\n        yield effects.put(actions.requestNewGifError(e));\n        /**\n         * Dedicated LOADING_COMPLETE action to notify interested components outside\n         * This component will not use it in any way\n         */\n        yield effects.put(actions.loadingComplete(e), \"../../../*\");\n    }\n};\nexport default mainSaga;\n","import color from \"color\";\nconst styles = {\n    table: {\n        display: \"flex\",\n        \"flex-wrap\": \"wrap\",\n        margin: \"0.2em 0.2em 0.2em 0.2em\",\n        padding: 0,\n        \"flex-direction\": \"column\",\n        width: \"20em\"\n    },\n    cell: {\n        \"box-sizing\": \"border-box\",\n        \"flex-grow\": 1,\n        width: \"100%\",\n        overflow: \"hidden\",\n        padding: \"0.2em 0.2em\",\n        border: `solid 2px ${color(\"slategrey\").fade(0.5)}`,\n        \"border-bottom\": \"none\",\n        \"background-color\": \"#f7f7f7\",\n        display: \"flex\",\n        \"align-items\": \"center\",\n        \"justify-content\": \"center\",\n        \"&:last-child\": {\n            \"border-bottom\": `solid 2px ${color(\"slategrey\").fade(\n                0.5\n            )} !important`\n        }\n    },\n    \"image-container\": {\n        height: \"15em\"\n    },\n    image: {\n        width: \"100%\",\n        height: \"100%\"\n    }\n};\n\nexport default styles;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ComponentManager, AppContainer, AppContainerContext } from \"fractal-component\";\nimport * as actionTypes from \"./actions/types\";\nimport reducer from \"./reducers\";\nimport * as actions from \"./actions\";\nimport saga from \"./sagas\";\nimport jss from \"jss\";\nimport jssDefaultPreset from \"jss-preset-default\";\nimport styles from \"./styles\";\nimport partialRight from \"lodash/partialRight\";\n\nclass RandomGif extends React.Component {\n    constructor(props) {\n        super(props);\n        // --- initialise component state\n        this.state = {\n            isLoading: false,\n            imageUrl: null,\n            error: null\n        };\n        this.componentManager = new ComponentManager(this, {\n            namespace: \"io.github.t83714/RandomGif\",\n            // --- register all action types so that actions are serialisable\n            actionTypes,\n            reducer,\n            saga: partialRight(saga, props.apiKey),\n            allowedIncomingMulticastActionTypes: [actionTypes.REQUEST_NEW_GIF],\n            namespaceInitCallback: componentManager => {\n                const styleSheet = jss\n                    .setup(jssDefaultPreset())\n                    .createStyleSheet(styles, {\n                        generateClassName: componentManager.createClassNameGenerator()\n                    })\n                    .attach();\n                return { styleSheet };\n            },\n            namespaceDestroyCallback: ({ styleSheet }) => {\n                styleSheet.detach();\n            }\n        });\n    }\n\n    render() {\n        const { styleSheet } = this.componentManager.getNamespaceData();\n        const { classes } = styleSheet;\n        return (\n            <div className={classes.table}>\n                <div className={classes.cell}>RandomGif</div>\n                <div\n                    className={`${classes.cell} ${classes[\"image-container\"]}`}\n                >\n                    {this.state.imageUrl &&\n                        !this.state.isLoading &&\n                        !this.state.error && (\n                            <img\n                                alt=\"Gif\"\n                                src={this.state.imageUrl}\n                                className={`${classes.image}`}\n                            />\n                        )}\n                    {(!this.state.imageUrl || this.state.isLoading) &&\n                        !this.state.error && (\n                            <p>\n                                {this.state.isLoading\n                                    ? \"Requesting API...\"\n                                    : \"No GIF loaded yet!\"}\n                            </p>\n                        )}\n                    {this.state.error && (\n                        <p>{`Failed to request API: ${this.state.error}`}</p>\n                    )}\n                </div>\n                {this.props.showButton && (\n                    <div className={`${classes.cell} `}>\n                        <button\n                            onClick={() => {\n                                this.componentManager.dispatch(\n                                    actions.requestNewGif()\n                                );\n                            }}\n                            disabled={this.state.isLoading}\n                        >\n                            {this.state.isLoading\n                                ? \"Requesting API...\"\n                                : \"Get Gif\"}\n                        </button>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\n// --- allow appContainer to be passed through Context\nRandomGif.contextType = AppContainerContext;\n\nRandomGif.propTypes = {\n    showButton: PropTypes.bool,\n    apiKey: PropTypes.string,\n    styles: PropTypes.object,\n    appContainer: PropTypes.instanceOf(AppContainer)\n};\n\nRandomGif.defaultProps = {\n    showButton: true,\n    apiKey: \"Y4P38sTJAgEBOHP1B3sVs0Jtk01tb6fA\"\n};\n\nexport default RandomGif;\n\n//--- actions component may send out\nconst exposedActionTypes = {\n    NEW_GIF: actionTypes.NEW_GIF,\n    LOADING_START: actionTypes.LOADING_START,\n    LOADING_COMPLETE: actionTypes.LOADING_COMPLETE,\n    REQUEST_NEW_GIF: actionTypes.REQUEST_NEW_GIF\n};\n//--- action component will accept\nconst exposedActions = {\n    requestNewGif: actions.requestNewGif\n};\n\n/**\n * expose actions for component users\n */\nexport { exposedActionTypes as actionTypes, exposedActions as actions };","export const REQUEST_NEW_PAIR = Symbol(\"REQUEST_NEW_PAIR\");\nexport const LOADING_START = Symbol(\"LOADING_START\");\nexport const LOADING_COMPLETE = Symbol(\"LOADING_COMPLETE\");","import * as actionTypes from \"./types\";\n\nexport function requestNewPair() {\n    return {\n        type: actionTypes.REQUEST_NEW_PAIR\n    };\n}\n\nexport function loadingStart() {\n    return {\n        type: actionTypes.LOADING_START\n    };\n}\n\nexport function loadingComplete(error = null) {\n    return {\n        type: actionTypes.LOADING_COMPLETE,\n        payload: {\n            isSuccess: error ? false : true,\n            error\n        }\n    };\n}\n","import { actionTypes as RandomGifActionTypes } from \"../../RandomGif\";\n\nconst reducer = function(state, action) {\n    switch (action.type) {\n        case RandomGifActionTypes.LOADING_START:\n            return {\n                ...state,\n                isLoading: true,\n                itemsLoading: {\n                    ...state.itemsLoading,\n                    [action.componentId]: true\n                }\n            };\n        case RandomGifActionTypes.LOADING_COMPLETE: {\n            const { isSuccess, payloadError } = action.payload;\n            let { itemsLoading, error } = state;\n            itemsLoading = {\n                ...itemsLoading,\n                [action.componentId]: false\n            };\n            let isLoading = false;\n            Object.keys(itemsLoading).forEach(componentId => {\n                if (itemsLoading[componentId]) isLoading = true;\n            });\n            return {\n                ...state,\n                isLoading,\n                error: error ? error : isSuccess ? null : payloadError,\n                itemsLoading\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport default reducer;\n","import * as actions from \"../actions\";\nimport * as actionTypes from \"../actions/types\";\nimport {\n    actions as RandomGifActions,\n    actionTypes as RandomGifActionTypes\n} from \"../../RandomGif\";\n\nfunction* mainSaga(effects) {\n    const isLoadingStartActionDispatched = false;\n    yield effects.takeEvery(\n        RandomGifActionTypes.LOADING_START,\n        function*() {\n            if (!isLoadingStartActionDispatched) {\n                yield effects.put(\n                    actions.loadingStart(),\n                    \"../../../*\"\n                );\n            }\n        }\n    );\n    yield effects.takeEvery(\n        RandomGifActionTypes.LOADING_COMPLETE,\n        function*() {\n            /**\n             * throw exposed action out of box\n             * It's guaranteed all reducers are run before saga.\n             * Therefore, if you get state in a saga via `select` effect,\n             * it'll always be applied state.\n             */\n            const { isLoading, error } = yield effects.select();\n            if (!isLoading) {\n                yield effects.put(\n                    actions.loadingComplete(error),\n                    \"../../../*\"\n                );\n                isLoadingStartActionDispatched = false;\n            }\n        }\n    );\n    // --- monitor `REQUEST_NEW_PAIR` and send multicast actions to RandomGifs\n    yield effects.takeEvery(\n        actionTypes.REQUEST_NEW_PAIR,\n        function*() {\n            yield effects.put(\n                RandomGifActions.requestNewGif(),\n                \"./Gifs/*\"\n            );\n        }\n    );\n}\n\nexport default mainSaga;","import color from \"color\";\nconst styles = {\n    table: {\n        display: \"flex\",\n        \"flex-wrap\": \"wrap\",\n        margin: \"0.2em 0.2em 0.2em 0.2em\",\n        padding: 0,\n        \"flex-direction\": \"column\",\n        width: \"41em\"\n    },\n    cell: {\n        \"box-sizing\": \"border-box\",\n        \"flex-grow\": 1,\n        width: \"100%\",\n        overflow: \"hidden\",\n        padding: \"0.2em 0.2em\",\n        border: `solid 2px ${color(\"slategrey\").fade(0.5)}`,\n        \"border-bottom\": \"none\",\n        \"background-color\": \"#f7f7f7\",\n        display: \"flex\",\n        \"align-items\": \"center\",\n        \"justify-content\": \"center\",\n        \"&:last-child\": {\n            \"border-bottom\": `solid 2px ${color(\"slategrey\").fade(\n                0.5\n            )} !important`\n        }\n    },\n    \"image-container\": {\n        height: \"15em\"\n    },\n    image: {\n        width: \"100%\",\n        height: \"100%\"\n    }\n};\n\nexport default styles;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ComponentManager, AppContainer, AppContainerContext, ActionForwarder } from \"fractal-component\";\nimport RandomGif, { actions as RandomGifActions, actionTypes as RandomGifActionTypes } from \"../RandomGif\";\n\nimport * as actions from \"./actions\";\nimport * as actionTypes from \"./actions/types\";\nimport reducer from \"./reducers\";\nimport saga from \"./sagas\";\n\nimport jss from \"jss\";\nimport jssDefaultPreset from \"jss-preset-default\";\nimport styles from \"./styles\";\n\nclass RandomGifPair extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemsLoading: {},\n            isLoading: false,\n            error: null\n        };\n\n        this.componentManager = new ComponentManager(this, {\n            namespace: \"io.github.t83714/RandomGifPair\",\n            reducer,\n            saga,\n            /**\n             * Register actions for action serialisation / deserialisation.\n             * It's much easier to use Symbol as action type to make sure no action type collision among different component.\n             * ( Considering we now use actions as primary way for inter-component communication, it's quite important in a multicaset action environment)\n             */\n            actionTypes,\n            // --- specify accepted types of external multicast actions\n            // --- By default, component will not accept any incoming multicast action.\n            // --- No limit to actions that are sent out\n            allowedIncomingMulticastActionTypes: [actionTypes.REQUEST_NEW_PAIR],\n            namespaceInitCallback: componentManager => {\n                const styleSheet = jss\n                    .setup(jssDefaultPreset())\n                    .createStyleSheet(props.styles ? props.styles : styles, {\n                        generateClassName: componentManager.createClassNameGenerator()\n                    })\n                    .attach();\n                return { styleSheet };\n            },\n            namespaceDestroyCallback: ({ styleSheet }) => {\n                styleSheet.detach();\n            }\n        });\n    }\n\n    render() {\n        const { styleSheet } = this.componentManager.getNamespaceData();\n        const { classes } = styleSheet;\n        return (\n            <div className={classes.table}>\n                <div className={classes.cell}>RandomGif Pair</div>\n                <div className={`${classes.cell}`}>\n                    <div>\n                        <RandomGif\n                            showButton={false}\n                            apiKey={this.props.apiKey}\n                            namespacePrefix={`${\n                                this.componentManager.fullPath\n                            }/Gifs`}\n                            appContainer={this.componentManager.appContainer}\n                        />\n                    </div>\n                    <div>\n                        <RandomGif\n                            showButton={false}\n                            apiKey={this.props.apiKey}\n                            namespacePrefix={`${\n                                this.componentManager.fullPath\n                            }/Gifs`}\n                            appContainer={this.componentManager.appContainer}\n                        />\n                    </div>\n                </div>\n                {this.props.showButton && (\n                    <div className={`${classes.cell} `}>\n                        <button\n                            onClick={() => {\n                                this.componentManager.dispatch(\n                                    actions.requestNewPair()\n                                );\n                            }}\n                            disabled={this.state.isLoading}\n                        >\n                            {this.state.isLoading\n                                ? \"Loading...\"\n                                : \"Get Gif Pair\"}\n                        </button>\n                    </div>\n                )}\n                {/**\n                 * Use ActionForwarder to throw NEW_GIF out of RandomGifPair container\n                 * Set namespace to `${this.componentManager.fullPath}/Gifs` in order to listen to\n                 * all `out of box` actions from two `RandomGif` components\n                 */}\n                <ActionForwarder\n                    namespacePrefix={`${this.componentManager.fullPath}/Gifs`}\n                    pattern={RandomGifActionTypes.NEW_GIF}\n                    relativeDispatchPath=\"../../../../*\"\n                    appContainer={this.componentManager.appContainer}\n                />\n\n                {/**\n                 * Use ActionForwarder to forward LOADING_START & LOADING_COMPLETE actions from `RandomGif`\n                 * to current component (`RandomGifPair`)'s namespace.\n                 * i.e. from `${this.componentManager.fullPath}/Gifs` to `${this.componentManager.fullPath}`\n                 * Thus, `relativeDispatchPath` should be \"..\"\n                 */}\n                <ActionForwarder\n                    namespacePrefix={`${this.componentManager.fullPath}/Gifs`}\n                    pattern={action =>\n                        action.type === RandomGifActionTypes.LOADING_START ||\n                        action.type === RandomGifActionTypes.LOADING_COMPLETE\n                    }\n                    relativeDispatchPath=\"..\"\n                    appContainer={this.componentManager.appContainer}\n                />\n            </div>\n        );\n    }\n}\n\n// --- allow appContainer to be passed through Context\nRandomGifPair.contextType = AppContainerContext;\n\nRandomGifPair.propTypes = {\n    showButton: PropTypes.bool,\n    apiKey: PropTypes.string,\n    styles: PropTypes.object,\n    appContainer: PropTypes.instanceOf(AppContainer)\n};\n\nRandomGifPair.defaultProps = {\n    showButton: true\n};\n\nexport default RandomGifPair;\n\n//--- actions component may send out\nconst exposedActionTypes = {\n    // --- export NEW_GIF action type as well just\n    // --- so people can use `RandomGifPair` without knowing `RandomGif`\n    NEW_GIF: RandomGifActionTypes.NEW_GIF,\n    LOADING_START: actionTypes.LOADING_START,\n    LOADING_COMPLETE: actionTypes.LOADING_COMPLETE,\n    REQUEST_NEW_PAIR: actionTypes.REQUEST_NEW_PAIR\n};\n//--- action component will accept\nconst exposedActions = {\n    requestNewPair: actions.requestNewPair\n};\n\n/**\n * expose actions for component users\n */\nexport { exposedActionTypes as actionTypes, exposedActions as actions };\n","import \"@babel/polyfill\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport RandomGif from \"./RandomGif\";\nimport RandomGifPair from \"./RandomGifPair\";\n\nReactDOM.render(\n    <div>\n        <div>\n            <RandomGif />\n        </div>\n        <div>\n            <RandomGifPair />\n        </div>\n    </div>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}